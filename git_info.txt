--строка терминала работает, если ничего не происходит или не дает ввод, то q - выход, пробел - пролистать дальше
{cоздание псевдонима команды} - git config --global alias.gg 'log --pretty=format:"%C(yellow)%h%Creset -%C(green)%d%Creset %s %C(bold blue)(%cn) %C(green)%cd%Creset" --graph --date=format:"%d.%m.%Y %H:%M"' - изменение цвета вывода в консоли 
----
! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/MikkoPlus/hello.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

если имеются не загруженные файлы с удалённого репозитория, стоит сперва их загрузить
----
(git branch)     -b - флаг показывает список веток на удаленном репозитории
(+'branch_name') -D - флаг удаляет выбранную ветку из локального репозитория
----

cd - изменить директорию
git config --global user.name/email "" - глобально указывает автора и почту
git init - запускает работу гита в папка
git status - показывает статус файлов в отслеживаемой папке
git add . - добавляет файл в индексируемое состояние, из которого можно сделать снимоке - commit
git commit - делает снимок 
git commit -am"коментарий" - позволяет сделать снимок с коментарием без git add.
git checkout/git restored +name - отката к предыдущему коммиту из индексируемого состояния файла
git reset HEAD 'имя файла' - вернуть статус файла в неиндексируемое состояние
git diff --cached - показывает изменения в индексируемых файлах, которые войдут в коммит
unlink 'имя файла' - удаление файла через консоль
git log + (-1,2,3...) + (-p) - выведение всех коммитов от более свежих к старым + ( можно указать сколько нужно вывести коммитов) + ( узнать изменения)
git log --stat - узнать изменения в комитах, а так же сколько строк в каком файле было добавлено\удалено
git log --pretty=oneline - изменяет формат вывода изменений (=oneline - в одну строку, более короткая запись), можно менять формат вывода (=format:...)
git log --since=2.week - дата до которой мы можем искать коммит
git log --until=1.week - дата от которой можно искать коммит
git log -S(содержимое строки которое ищем без()) - поиск по всем комитам определенной строки
git log --author="" - поиск по авторам
git blame "название файла или строки" - поиск по комитам автора строки\файла и даа последнего редактирования
git branch - выводит спсок доступных веток
git branch "name_branch" - добавление новой ветки
git checkout "name_branch" - переключение между ветками
git checkout -b "name_branch" - создание новой ветки и переключение на нее
git branch -m "name_branch" "new_name_branch" - переименование ветки
git branch -D - для удаления ветки
git log --pretty=format:"%h -%d %s %cd" --graph - история всех коммитов
git merge - слияние веток, находимся в ветке в которую сливаем остальные ветки
git remote add origin(имя удаленного репозиттория) https://github.com/MikkoPlus/'название репозитория' - для добавления на удаленный сервер локального репозиттория, после его создания на гите(название origin можно изменить в git config )
=>git push -u origin(имя удаленного репозиттория) master(название ветки) - отправление данных локального репозиттория на удаленный сервер(гит)
git remote - список доступных удаленых реппозитториев
git clone 'адрес удаленного git репозиттория'- клонировать репозиторий
git pull 'название ветки' - для скачивания изменнений с репозитория
git fetch - для получения всех изменений с удалённого сервера
git push 'имя репозитория' :'branch_name' - позволяет управлять ветками на удалённом репозитории'
git stash - спрятать изменения, после добавления в индекс, без изменения рабочего файла 
git stash list - показать список спрятаных изменнений
git stash apply - вернуть припрятаные изменения
               +stash@{№} - вернуть определеные изменения
git stash drop - удалить припрятаные изменения из stash list
git tag v*.*.* - создать тэг, по которому можно легко найти коммит, тэг присваевается коммиту      
git tag - вывести список доступных тэгов
git tag -a v*.*.* -m'коментарий' - флаг (-а) метка тэга, флаг(-m) - коментарий
git tag -l v1.1.* - поиск всех тэгов 1.1.*
git tag -d v*.*.* - удаление тэга
git HEAD - последний коммит


